


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Valvano, solution
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/17/2021
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE2 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE2 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   15 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   16 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   17 00000000         ;   3) When the button (PE1) is pressed-and-released inc
                       rease
   18 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   19 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   20 00000000         ;      to 90% to 10% to 30% so on
   21 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   22 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   23 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   24 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   25 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   26 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   27 00000000         ;         cycle or reset to 30%.
   28 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   29 00000000         ; PortE device registers
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   43 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   44 00000000         
   45 00000000                 IMPORT           TExaS_Init
   46 00000000                 THUMB
   47 00000000                 AREA             DATA, ALIGN=2
   48 00000000         ;global variables go here
   49 00000000         
   50 00000000         
   51 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000                 THUMB
   53 00000000         
   54 00000000                 EXPORT           Start
   55 00000000         
   56 00000000         Start
   57 00000000         ; TExaS_Init sets bus clock at 80 MHz
   58 00000000 F7FF FFFE       BL               TExaS_Init
   59 00000004         ; voltmeter, scope on PD3
   60 00000004         ; Initialization goes here
   61 00000004 486C            LDR              R0, =SYSCTL_RCGCGPIO_R ; activa
                                                            te the clock for po
                                                            rt D
   62 00000006 7801            LDRB             R1, [R0]
   63 00000008 F041 0130       ORR              R1, #0x30   ; set bit 7 to turn
                                                             on the clock
   64 0000000C 7001            STRB             R1, [R0]
   65 0000000E BF00            NOP
   66 00000010 BF00            NOP
   67 00000012         
   68 00000012 486A            LDR              R0, =GPIO_PORTF_LOCK_R ;unlock 
                                                            the lock register



ARM Macro Assembler    Page 3 


   69 00000014 496A            LDR              R1, =GPIO_LOCK_KEY
   70 00000016 6001            STR              R1, [R0]
   71 00000018 486A            LDR              R0, =GPIO_PORTF_CR_R ;
   72 0000001A 6801            LDR              R1, [R0]
   73 0000001C F041 01FF       ORR              R1, #0xFF
   74 00000020 6001            STR              R1, [R0]
   75 00000022         
   76 00000022 4869            LDR              R0, =GPIO_PORTF_DIR_R ; set dir
                                                            ection register
   77 00000024 6801            LDR              R1, [R0]
   78 00000026 F001 01FF       AND              R1, #0xFF   ; PF0-PF7 outputs
   79 0000002A 6001            STR              R1, [R0]
   80 0000002C         
   81 0000002C 4867            LDR              R0, =GPIO_PORTF_DEN_R ; enable 
                                                            port F digital port
                                                            
   82 0000002E 6801            LDR              R1, [R0]
   83 00000030 F041 0110       ORR              R1, #0x10   ; digital enable PF
                                                            1,PF3
   84 00000034 6001            STR              R1, [R0]
   85 00000036         
   86 00000036 4866            LDR              R0, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PE4
   87 00000038 6801            LDR              R1, [R0]
   88 0000003A F041 0110       ORR              R1, #0x10   ;
   89 0000003E 6001            STR              R1, [R0]
   90 00000040         
   91 00000040 4864            LDR              R0, =GPIO_PORTE_DIR_R ; ret dir
                                                            ection of registers
                                                            
   92 00000042 6801            LDR              R1, [R0]
   93 00000044 F001 01FD       AND              R1, #0xFD
   94 00000048 F041 0104       ORR              R1, #0x04
   95 0000004C 6001            STR              R1, [R0]
   96 0000004E         
   97 0000004E 4862            LDR              R0, =GPIO_PORTE_DEN_R ; enable 
                                                            port E digital port
                                                            
   98 00000050 6801            LDR              R1, [R0]
   99 00000052 F041 0106       ORR              R1, #0x06
  100 00000056 6001            STR              R1, [R0]
  101 00000058         
  102 00000058 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  103 0000005A         
  104 0000005A F04F 0332       MOV              R3, #50     ;CENTISECODNS CONST
                                                            ANT
  105 0000005E F04F 0203       MOV              R2, #3      ;pERCENT COUNTER
  106 00000062 F04F 0400       MOV              R4, #0      ;PREVIOUS VALUE
  107 00000066 F04F 070A       MOV              R7, #10     ;MODULO VALUE
  108 0000006A         
  109 0000006A         loop
  110 0000006A         ; main engine goes here
  111 0000006A 485C            LDR              R0, =GPIO_PORTE_DATA_R
  112 0000006C F8D0 8000       LDR              R8, [R0]
  113 00000070         
  114 00000070 FB02 F503       MUL              R5, R2, R3
  115 00000074 F048 0804       ORR              R8, R8, #0x04 ; BIT 2



ARM Macro Assembler    Page 4 


  116 00000078 F8C0 8000       STR              R8, [R0]
  117 0000007C F000 F82D       BL               delay
  118 00000080 F8D0 8000       LDR              R8, [R0]
  119 00000084 F008 08FB       AND              R8, R8, #0xFB
  120 00000088 F8C0 8000       STR              R8, [R0]
  121 0000008C F2A2 050A       ADD              R5, R2, #-10
  122 00000090         ;EOR R5, #0xFFFFFFFF
  123 00000090 F025 35FF       BIC              R5,R5,#0xFFFFFFFF
  124 00000094 F105 0501       ADD              R5, R5, #1
  125 00000098 FB03 F505       MUL              R5, R3, R5
  126 0000009C F000 F81D       BL               delay
  127 000000A0 F008 0102       AND              R1, R8, #0x02
  128 000000A4 EA4F 0151       LSR              R1, R1, #1
  129 000000A8 4689            MOV              R9, R1
  130 000000AA EA81 0104       EOR              R1, R1, R4
  131 000000AE EA01 0104       AND              R1, R1, R4
  132 000000B2 464C            MOV              R4, R9
  133 000000B4 1C09            ADDS             R1, R1, #0
  134 000000B6 D109            BNE              INCREMENT
  135 000000B8         
  136 000000B8 F8DF C124       LDR              R12, =GPIO_PORTF_DATA_R
  137 000000BC F8DC C000       LDR              R12, [R12]
  138 000000C0         ;LSR R0, #4
  139 000000C0 F00C 0C10       AND              R12, #0x10
  140 000000C4 F11C 0C00       ADDS             R12, R12, #0
  141 000000C8         
  142 000000C8 D01F            BEQ              Breathe
  143 000000CA         
  144 000000CA E7CE            B                loop
  145 000000CC         INCREMENT
  146 000000CC F102 0202       ADD              R2, R2, #2
  147 000000D0 FBB2 F6F7       UDIV             R6, R2, R7
  148 000000D4 FB06 2217       MLS              R2, R6, R7, R2
  149 000000D8 4770            BX               LR
  150 000000DA         
  151 000000DA         
  152 000000DA         delay                                ;Delays for paramet
                                                            er 1 ms
  153 000000DA B422            PUSH             {R1, R5}
  154 000000DC F241 41D5       MOV              R1, #5333
  155 000000E0 FB05 F501       MUL              R5, R5, R1
  156 000000E4         wait
  157 000000E4 1E6D            SUBS             R5, R5, #1
  158 000000E6 F8D0 8000       LDR              R8, [R0]
  159 000000EA F008 0102       AND              R1, R8, #2
  160 000000EE EA4F 0151       LSR              R1, R1, #1
  161 000000F2 4689            MOV              R9, R1
  162 000000F4 EA81 0104       EOR              R1, R1, R4
  163 000000F8 EA01 0104       AND              R1, R1, R4
  164 000000FC 464C            MOV              R4, R9
  165 000000FE 1C09            ADDS             R1, R1, #0
  166 00000100         
  167 00000100 D1E4            BNE              INCREMENT
  168 00000102         
  169 00000102 1C2D            ADDS             R5, R5, #0
  170 00000104 D1EE            BNE              wait
  171 00000106 BC22            POP              {R1, R5}
  172 00000108         
  173 00000108 4770            BX               LR



ARM Macro Assembler    Page 5 


  174 0000010A         
  175 0000010A         Breathe
  176 0000010A         ;R5: address of port
  177 0000010A         ;R1: duty cycle
  178 0000010A         ;R3: cycle counter
  179 0000010A         ;R4: flag for incimenting vs decrementing
  180 0000010A E92D 08AB       PUSH             {R0, R1, R3, R5, R7, R11}
  181 0000010E 4615            MOV              R5, R2
  182 00000110 F04F 0301       MOV              R3, #1
  183 00000114 F04F 0B01       MOV              R11, #1
  184 00000118         bLoop
  185 00000118         
  186 00000118 4629            MOV              R1, R5
  187 0000011A         
  188 0000011A         
  189 0000011A E92D 5000       PUSH             {R14, R12}
  190 0000011E 4F2F            LDR              R7, =GPIO_PORTE_DATA_R
  191 00000120 F8D7 C000       LDR              R12, [R7]
  192 00000124 F04C 0C04       ORR              R12, R12, #0x04
  193 00000128 F8C7 C000       STR              R12, [R7]
  194 0000012C         
  195 0000012C F000 F82B       BL               delayUS
  196 00000130 460D            MOV              R5, R1
  197 00000132 F00C 0CFB       AND              R12, R12, #0xFB
  198 00000136 F8C7 C000       STR              R12, [R7]
  199 0000013A F081 35FF       EOR              R5, R1, #0xFFFFFFFF
  200 0000013E F105 0565       ADD              R5, R5, #101
  201 00000142         
  202 00000142         
  203 00000142 F000 F820       BL               delayUS
  204 00000146         
  205 00000146 460D            MOV              R5, R1
  206 00000148         
  207 00000148 E8BD 5000       POP              {R14, R12}
  208 0000014C         
  209 0000014C 1E5B            SUBS             R3, R3, #1
  210 0000014E D1E3            BNE              bLoop
  211 00000150 F04F 0301       MOV              R3, #1      ;speed 
  212 00000154 EB1B 0505       ADDS             R5, R11, R5
  213 00000158 D003            BEQ              ifZero
  214 0000015A F1B5 0C64       SUBS             R12, R5, #100
  215 0000015E D005            BEQ              ifHundred
  216 00000160 E008            B                neither
  217 00000162         ifZero
  218 00000162 F04F 0B01       MOV              R11, #1
  219 00000166 F105 0501       ADD              R5, R5, #1
  220 0000016A E003            B                neither
  221 0000016C         ifHundred
  222 0000016C F04F 3BFF       MOV              R11, #-1
  223 00000170 F1A5 0501       SUB              R5, R5, #1
  224 00000174         neither
  225 00000174         
  226 00000174         
  227 00000174 491A            LDR              R1, =GPIO_PORTF_DATA_R
  228 00000176 6809            LDR              R1, [R1]
  229 00000178         ;LSR R0, #4
  230 00000178 F001 0110       AND              R1, #0x10
  231 0000017C 1C09            ADDS             R1, R1, #0
  232 0000017E         



ARM Macro Assembler    Page 6 


  233 0000017E D0CB            BEQ              bLoop
  234 00000180         
  235 00000180 E8BD 086B       POP              {R0, R1, R3, R5, R6, R11}
  236 00000184 4770            BX               LR
  237 00000186         
  238 00000186         delayUS                              ;Delays for paramet
                                                            er 1 microseconds
  239 00000186         
  240 00000186 B422            PUSH             {R1, R5}
  241 00000188 F240 2115       MOV              R1, #533
  242 0000018C FB05 F501       MUL              R5, R5, R1
  243 00000190         waitUS
  244 00000190 1E6D            SUBS             R5, R5, #0x01
  245 00000192 F8D0 8000       LDR              R8, [R0]
  246 00000196 F008 0102       AND              R1, R8, #0x02
  247 0000019A EA4F 0151       LSR              R1, R1, #1
  248 0000019E 4689            MOV              R9, R1
  249 000001A0 EA81 0104       EOR              R1, R1, R4
  250 000001A4 EA01 0104       AND              R1, R1, R4
  251 000001A8 464C            MOV              R4, R9
  252 000001AA 1C09            ADDS             R1, R1, #0
  253 000001AC         
  254 000001AC D18E            BNE              INCREMENT
  255 000001AE         
  256 000001AE 1C2D            ADDS             R5, R5, #0
  257 000001B0 D1EE            BNE              waitUS
  258 000001B2 BC22            POP              {R1, R5}
  259 000001B4         
  260 000001B4 4770            BX               LR
  261 000001B6         
  262 000001B6         
  263 000001B6 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  264 000001B8                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              4002551C 
              40025510 
              40024400 
              4002451C 
              400243FC 
              400253FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -IC:\Users\sharo\AppData\Local\A
rm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\sharo\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 533" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: .text unused
Breathe 0000010A

Symbol: Breathe
   Definitions
      At line 175 in file main.s
   Uses
      At line 142 in file main.s
Comment: Breathe used once
INCREMENT 000000CC

Symbol: INCREMENT
   Definitions
      At line 145 in file main.s
   Uses
      At line 134 in file main.s
      At line 167 in file main.s
      At line 254 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 56 in file main.s
   Uses
      At line 54 in file main.s
Comment: Start used once
bLoop 00000118

Symbol: bLoop
   Definitions
      At line 184 in file main.s
   Uses
      At line 210 in file main.s
      At line 233 in file main.s

delay 000000DA

Symbol: delay
   Definitions
      At line 152 in file main.s
   Uses
      At line 117 in file main.s
      At line 126 in file main.s

delayUS 00000186

Symbol: delayUS
   Definitions
      At line 238 in file main.s
   Uses
      At line 195 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 203 in file main.s

ifHundred 0000016C

Symbol: ifHundred
   Definitions
      At line 221 in file main.s
   Uses
      At line 215 in file main.s
Comment: ifHundred used once
ifZero 00000162

Symbol: ifZero
   Definitions
      At line 217 in file main.s
   Uses
      At line 213 in file main.s
Comment: ifZero used once
loop 0000006A

Symbol: loop
   Definitions
      At line 109 in file main.s
   Uses
      At line 144 in file main.s
Comment: loop used once
neither 00000174

Symbol: neither
   Definitions
      At line 224 in file main.s
   Uses
      At line 216 in file main.s
      At line 220 in file main.s

wait 000000E4

Symbol: wait
   Definitions
      At line 156 in file main.s
   Uses
      At line 170 in file main.s
Comment: wait used once
waitUS 00000190

Symbol: waitUS
   Definitions
      At line 243 in file main.s
   Uses
      At line 257 in file main.s
Comment: waitUS used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 42 in file main.s
   Uses
      At line 69 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 111 in file main.s
      At line 190 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 97 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 71 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 136 in file main.s
      At line 227 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 81 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 68 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 86 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 61 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 58 in file main.s
Comment: TExaS_Init used once
1 symbol
364 symbols in table
